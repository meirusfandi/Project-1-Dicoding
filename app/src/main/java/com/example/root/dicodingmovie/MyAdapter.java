package com.example.root.dicodingmovie;import android.content.Context;import android.text.TextUtils;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;import com.squareup.picasso.Picasso;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Date;public class MyAdapter extends BaseAdapter {    private ArrayList<MyModel> model = new ArrayList<>();    private LayoutInflater inflater;    private Context context;    public MyAdapter(Context context){        this.context    = context;        inflater        = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);    }    public void setData(ArrayList<MyModel> item){        model   = item;        notifyDataSetChanged();    }    public void addItem(final MyModel item){        model.add(item);        notifyDataSetChanged();    }    public void clearData(){        model.clear();    }    public int getItemViewType(int position){        return 0;    }    public int getViewTypeCount(){        return 1;    }    @Override    public int getCount() {        if (model == null) return 0;        return model.size();    }    @Override    public MyModel getItem(int i) {        return model.get(i);    }    @Override    public long getItemId(int i) {        return i;    }    @Override    public View getView(int i, View view, ViewGroup viewGroup) {        MyHolder holder = null;        if (view == null){            holder                  = new MyHolder();            view                    = inflater.inflate(R.layout.list_movie, null);            holder.show_title       = (TextView)view.findViewById(R.id.show_title);            holder.show_release     = (TextView)view.findViewById(R.id.show_release);            holder.show_tagline     = (TextView)view.findViewById(R.id.show_overview);            holder.show_icon        = (ImageView)view.findViewById(R.id.show_icon);            view.setTag(holder);        } else {            holder  = (MyHolder)view.getTag();        }        holder.show_title.setText(model.get(i).getTitle());        String getTanggal   = model.get(i).getRelease();        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");        try {            Date date = dateFormat.parse(getTanggal);            SimpleDateFormat newDateFormat = new SimpleDateFormat("EEEE, dd MM yyyy");            String tv_date  = newDateFormat.format(date);            holder.show_release.setText(tv_date);        } catch (ParseException e){            e.printStackTrace();        }        String getIconPath  = model.get(i).getIcon_path();        Picasso.with(context).load("http://image.tmdb.org/t/p/w185/"+getIconPath).placeholder(context.getResources().                getDrawable(R.drawable.ic_launcher_background)).error(context.getResources().                getDrawable(R.drawable.ic_launcher_background)).into(holder.show_icon);        String tv_tagline = "";        if (TextUtils.isEmpty(model.get(i).getOverview())){            tv_tagline  = "No Tagline Movie";        } else {            tv_tagline  = model.get(i).getOverview();        }        holder.show_tagline.setText(tv_tagline);        return view;    }    private static class MyHolder{        TextView show_title;        TextView show_tagline;        ImageView show_icon;        TextView show_release;    }}