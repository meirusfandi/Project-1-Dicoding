package com.example.root.dicodingmovie;import android.content.AsyncTaskLoader;import android.content.Context;import com.loopj.android.http.AsyncHttpResponseHandler;import com.loopj.android.http.SyncHttpClient;import org.json.JSONArray;import org.json.JSONObject;import java.util.ArrayList;import cz.msebera.android.httpclient.Header;public class MyAsyncTaskLoader extends AsyncTaskLoader<ArrayList<MyModel>>{    private ArrayList<MyModel> model;    private boolean result = false;    private String cariJudul;    public MyAsyncTaskLoader(final Context context, String cariJudul) {        super(context);        onContentChanged();        this.cariJudul = cariJudul;    }    protected void onStartLoading(){        if (takeContentChanged())            forceLoad();        else if (result)            deliverResult(model);    }    public void deliverResult(ArrayList<MyModel> items){        model   = items;        result  = true;        super.deliverResult(items);    }    protected void onReset(){        super.onReset();        onStopLoading();        if (result){            onReleaseResources(model);            model = null;            result = false;        }    }    private void onReleaseResources(ArrayList<MyModel> model){    }    private static final String API_KEY = "233b568bea8fb27357da8dd3df2fc37f";    @Override    public ArrayList<MyModel> loadInBackground() {        SyncHttpClient client = new SyncHttpClient();        final ArrayList<MyModel> models = new ArrayList<>();        String url = "https://api.themoviedb.org/3/search/movie?api_key="+API_KEY+"&language=en-US&query="+cariJudul;        client.get(url, new AsyncHttpResponseHandler() {            public void onStart(){                super.onStart();                setUseSynchronousMode(true);            }            @Override            public void onSuccess(int statusCode, Header[] headers, byte[] responseBody) {                try {                    String result       = new String(responseBody);                    JSONObject response = new JSONObject(result);                    JSONArray list      = response.getJSONArray("results");                    for (int i=0; i<list.length(); i++){                        JSONObject show = list.getJSONObject(i);                        MyModel myModel = new MyModel(show);                        models.add(myModel);                    }                } catch (Exception e){                    e.printStackTrace();                }            }            @Override            public void onFailure(int statusCode, Header[] headers, byte[] responseBody, Throwable error) {            }        });        return models;    }}